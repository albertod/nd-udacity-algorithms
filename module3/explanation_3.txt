For this problem I first started with sorting using mergeSort, the variant is that I sorted in descending order. Then I created an array "result" with size 2.
As I know my sorted array is in  descending order I can fill my result array interchangeable between index 0 and index 1, this will give me the 2 greatest number possible.
The runtime of this algorithm is (mergeSort + going over array) == O(nlog(n) + n) == O(nlog(n)).